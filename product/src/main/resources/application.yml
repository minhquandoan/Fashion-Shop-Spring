server:
  port: 8080
spring:
  # application.properties
  devtools:
    restart:
      enabled: false

  application:
    name: product
  
  profiles:
    active: "prod"

  datasource:
    driverClassName: org.postgresql.Driver
    username: ${POSTGRES_USER:admin}
    password: ${POSTGRES_PASSW:password}
    url: ${POSTGRES_URL:jdbc:postgresql://localhost:5432/fashion-shop}
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    # hibernate:
    #   ddl-auto: update
    show-sql: true
  config:
    import: "configserver:http://localhost:8071/"

  rabbitmq:
    host: ${RABBIT_HOST:localhost}
    port: 5672
    username: ${RABBIT_USER:guest}
    password: ${RABBIT_PASSW:guest}
  cloud:  
    bus:  
      enabled: true
      refresh: 
        enabled: true

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
    shutdown:
      enabled: true
  info:
    env:
      enabled: true
    

endpoints:
  shutdown:
    enabled: true

eureka:
  instance:
    preferIpAddress: true
  client:
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:8070/eureka/
  

info:
  app:
    name: "product-module"
    description: "Product Microservice of FashionShop App"
    version: ${build.version}

# logging:
#   level:  
#     com:
#       netflix:
#         discovery: DEBUG
#         eureka: DEBUG